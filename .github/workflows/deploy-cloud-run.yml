name: deploy-cloud-run

on:
  push:
    branches: [ main ]
  workflow_dispatch: {}

jobs:
  build-deploy:
    runs-on: ubuntu-latest

    permissions:
      id-token: write   # needed for WIF
      contents: read

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: gcloud info
        uses: google-github-actions/setup-gcloud@v2
        with:
          version: '>= 533.0.0'  # recent gcloud

      - name: Authenticate to Google Cloud via WIF
        uses: google-github-actions/auth@v2
        with:
          token_format: access_token
          workload_identity_provider: ${{ secrets.GCP_WIF_PROVIDER }}
          service_account: ${{ secrets.GCP_SERVICE_ACCOUNT }}

      - name: Set up gcloud
        uses: google-github-actions/setup-gcloud@v2

      - name: Enable required APIs (idempotent)
        run: |
          gcloud services enable \
            run.googleapis.com \
            artifactregistry.googleapis.com \
            cloudbuild.googleapis.com \
            --project "${{ secrets.GCP_PROJECT_ID }}"

      - name: Build and push container (Cloud Build)
        run: |
          gcloud builds submit \
            --project "${{ secrets.GCP_PROJECT_ID }}" \
            --tag "gcr.io/${{ secrets.GCP_PROJECT_ID }}/run-density:${{ github.sha }}"

      - name: Deploy to Cloud Run (latest)
        run: |
          gcloud run deploy run-density \
            --image "gcr.io/${{ secrets.GCP_PROJECT_ID }}/run-density:${{ github.sha }}" \
            --region "${{ secrets.GCP_REGION }}" \
            --allow-unauthenticated \
            --memory=1Gi --cpu=1 \
            --min-instances=0 --max-instances=3 \
            --timeout=300 \
            --project "${{ secrets.GCP_PROJECT_ID }}" \
            --quiet

      - name: Smoke: health & ready
        shell: bash
        env:
          BASE: ${{ secrets.SERVICE_BASE_URL }}
        run: |
          set -euo pipefail
          echo "▶ $BASE/health"; curl -sSf "$BASE/health" | jq .
          echo "▶ $BASE/ready";  curl -sSf "$BASE/ready"  | jq .
          echo "✅ Smoke passed"
