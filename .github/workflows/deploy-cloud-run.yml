name: deploy-cloud-run

on:
  push:
    branches: [ main ]
  workflow_dispatch: {}

jobs:
  build-deploy:
    name: Build → Deploy (Cloud Run)
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write   # Required for WIF

    outputs:
      service_url: ${{ steps.url.outputs.url }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Auth (Workload Identity Federation)
        id: auth
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: ${{ secrets.GCP_WIF_PROVIDER }}
          service_account: ${{ secrets.GCP_SERVICE_ACCOUNT }}

      - name: Setup gcloud
        uses: google-github-actions/setup-gcloud@v2

      - name: Configure Docker for Artifact Registry
        run: |
          gcloud auth configure-docker ${{ secrets.GCP_REGION }}-docker.pkg.dev --quiet

      - name: Build & Push image (Docker → Artifact Registry)
        run: |
          IMAGE="${{ secrets.GCP_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/run/${{ secrets.GCP_SERVICE }}:${{ github.sha }}"
          echo "IMAGE=$IMAGE"
          docker build -t "$IMAGE" .
          docker push "$IMAGE"
          echo "image=$IMAGE" >> $GITHUB_OUTPUT

      - name: Deploy to Cloud Run
        run: |
          IMAGE="${{ secrets.GCP_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/run/${{ secrets.GCP_SERVICE }}:${{ github.sha }}"
          gcloud run deploy "${{ secrets.GCP_SERVICE }}"             --project "${{ secrets.GCP_PROJECT_ID }}"             --region "${{ secrets.GCP_REGION }}"             --image "$IMAGE"             --platform managed             --allow-unauthenticated             --memory=1Gi --cpu=1             --min-instances=0 --max-instances=3             --timeout=300             --quiet

      - name: Fetch URL
        id: url
        run: |
          URL=$(gcloud run services describe "${{ secrets.GCP_SERVICE }}"             --project "${{ secrets.GCP_PROJECT_ID }}"             --region "${{ secrets.GCP_REGION }}"             --format='value(status.url)')
          echo "url=$URL" >> "$GITHUB_OUTPUT"

  contract-tests:
    name: Contract Tests (live)
    needs: build-deploy
    runs-on: ubuntu-latest

    env:
      BASE_URL: ${{ needs.build-deploy.outputs.service_url }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install test deps
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install -r requirements-test.txt

      - name: Run pytest contracts
        run: |
          echo "Testing against ${BASE_URL}"
          pytest -q tests/test_contract.py
