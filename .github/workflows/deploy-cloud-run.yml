name: deploy-cloud-run

on:
  workflow_dispatch:
  push:
    branches: [ main ]

jobs:
  build-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write   # required for WIF

    env:
      GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
      GCP_REGION:     ${{ secrets.GCP_REGION }}
      GCP_SERVICE:    ${{ secrets.GCP_SERVICE }}
      # Artifact Registry repo name (must exist in GCP_REGION)
      AR_REPO:        run

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # Authenticate to Google Cloud via Workload Identity Federation
      - name: Auth (WIF)
        id: auth
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: ${{ secrets.GCP_WIF_PROVIDER }}
          service_account:           ${{ secrets.GCP_SERVICE_ACCOUNT }}

      - name: Setup gcloud
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ env.GCP_PROJECT_ID }}

      - name: gcloud info
        run: |
          gcloud --version
          gcloud config set project "${GCP_PROJECT_ID}"
          gcloud services list --enabled || true

      # Docker login for Artifact Registry in the chosen region
      - name: Configure Docker for Artifact Registry
        run: |
          gcloud auth configure-docker ${GCP_REGION}-docker.pkg.dev -q

      # Build & push image with Docker (no Cloud Build / no _cloudbuild bucket)
      - name: Build & Push image (Docker â†’ Artifact Registry)
        run: |
          set -euo pipefail
          IMAGE="${GCP_REGION}-docker.pkg.dev/${GCP_PROJECT_ID}/${AR_REPO}/${GCP_SERVICE}:${GITHUB_SHA}"
          echo "Building $IMAGE ..."
          docker build -t "$IMAGE" .
          docker push "$IMAGE"
          echo "image=$IMAGE" >> "$GITHUB_OUTPUT"
        id: image

      # Deploy to Cloud Run (LATEST)
      - name: Deploy to Cloud Run
        run: |
          gcloud run deploy "${GCP_SERVICE}" \
            --project "${GCP_PROJECT_ID}" \
            --region  "${GCP_REGION}" \
            --image   "${{ steps.image.outputs.image }}" \
            --platform managed \
            --allow-unauthenticated \
            --memory=1Gi --cpu=1 \
            --min-instances=0 --max-instances=3 \
            --timeout=300 \
            --quiet

      # Discover the service URL
      - name: Fetch URL
        id: url
        run: |
          URL=$(gcloud run services describe "${GCP_SERVICE}" \
              --project "${GCP_PROJECT_ID}" \
              --region  "${GCP_REGION}" \
              --format='value(status.url)')
          echo "url=$URL" >> "$GITHUB_OUTPUT"

      # Smoke tests
      - name: "Smoke: /health and /ready"
        run: |
          set -euo pipefail
          URL="${{ steps.url.outputs.url }}"
          echo "Hitting $URL ..."
          curl -fsS "$URL/health" | jq .
          curl -fsS "$URL/ready"  | jq .
