name: Version Consistency Check

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  version-check:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Fetch all history for tags
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Check version consistency
      run: |
        echo "=== Version Consistency Check ==="
        python -c "
        from app.version import validate_version_consistency, get_current_version, get_latest_git_tag
        import sys
        
        print('Current version in code:', get_current_version())
        print('Latest git tag:', get_latest_git_tag())
        
        if not validate_version_consistency():
            print('❌ Version consistency check failed!')
            print('The version in app/main.py does not match the latest git tag.')
            print('Please ensure version consistency before merging.')
            sys.exit(1)
        else:
            print('✅ Version consistency check passed!')
        "
    
    - name: Check for version bump commits
      run: |
        echo "=== Checking for version bump commits ==="
        if git log --oneline -1 | grep -i "bump version\|version.*v[0-9]"; then
          echo "✅ Version bump commit detected"
        else
          echo "ℹ️  No version bump commit in latest commit"
        fi
