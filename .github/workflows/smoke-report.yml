name: smoke-report

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  smoke:
    runs-on: ubuntu-latest
    permissions:
      id-token: write   # required for WIF
      contents: read
    env:
      GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
      GCP_REGION:      ${{ secrets.GCP_REGION }}
      GCP_SERVICE:     ${{ secrets.GCP_SERVICE }}
    steps:
      - uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: ${{ secrets.GCP_WIF_PROVIDER }}
          service_account:          ${{ secrets.GCP_SERVICE_ACCOUNT }}

      - uses: google-github-actions/setup-gcloud@v2

      - name: Resolve URL
        id: url
        run: |
          set -euo pipefail
          URL=$(gcloud run services describe "$GCP_SERVICE" --region "$GCP_REGION" --format='value(status.url)')
          if [ -z "$URL" ]; then echo "Failed to resolve service URL" >&2; exit 1; fi
          echo "BASE_URL=$URL" >> "$GITHUB_ENV"

      - name: Health & Ready
        run: |
          set -euo pipefail
          curl -fsS "$BASE_URL/health" | jq -e '.ok == true' >/dev/null
          curl -fsS "$BASE_URL/ready"  | jq -e '.ok == true and .density_loaded and .overlap_loaded' >/dev/null

      - name: Tiny density check (retry)
        run: |
          set -euo pipefail
          payload='{"paceCsv":"https://raw.githubusercontent.com/thomjeff/run-density/main/data/your_pace_data.csv","startTimes":{"10K":440,"Half":460},"segments":[{"eventA":"10K","eventB":"Half","from":0.00,"to":2.74,"width":3.0,"direction":"uni"}],"stepKm":0.03,"timeWindow":60}'
          for i in 1 2 3; do
            if curl -fsS -X POST "$BASE_URL/api/density" -H "Content-Type: application/json" -d "$payload" | jq -e '.engine=="density"' >/dev/null; then
              echo "density OK"
              exit 0
            fi
            echo "attempt $i failed; retrying in 5sâ€¦"
            sleep 5
          done
          echo "density smoke failed" >&2
          exit 1